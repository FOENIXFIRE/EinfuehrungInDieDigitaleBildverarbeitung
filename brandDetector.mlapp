%Kevin Baur 11827180
classdef brandDetector < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                       matlab.ui.Figure
        LoadButton                     matlab.ui.control.Button
        BrandEditFieldLabel            matlab.ui.control.Label
        BrandEditField                 matlab.ui.control.EditField
        PredefinedVideosDropDownLabel  matlab.ui.control.Label
        DropDown                       matlab.ui.control.DropDown
        GetBrandButton                 matlab.ui.control.Button
        FinishedLampLabel              matlab.ui.control.Label
        FinishedLamp                   matlab.ui.control.Lamp
        EditField                      matlab.ui.control.EditField
        BrandAxes                      matlab.ui.control.UIAxes
        ImageAxes                      matlab.ui.control.UIAxes
    end


    methods (Access = private)
        
        function updateimage(app, imagefile)
            
            % For skoda.png, read the second image in the file 
            if strcmp(imagefile,'skoda.png')
                im = imread('skoda.png');
            elseif strcmp(imagefile,'rangeRover.png')
                im = imread('rangeRover.png');
            else
                try
                    im = imread(imagefile);
                catch ME
                    % If problem reading image, display error message
                    uialert(app.UIFigure, ME.message, 'Image Error');
                    return;
                end   
            end
            imagesc(app.ImageAxes,im);
        end
        
        
        %%output matched brand
        function updatebrand(app, image)
            app.FinishedLamp.Color = [0.39,0.83,0.07];
            app.EditField.Value = '';
            % load logo picture into Image
            imagesc(app.BrandAxes,image);
        end
        
 
        %%find logo position (Kevin Baur 11827180)
        function logoPosition(app, im)
            %cals logoPosition and stores the cropped logo image
            croppedImage = logoPosition(im);
            %calls brandmatching for template matching
            brandMatching(app,croppedImage);
        end
        
        
        %%brand matching (Manuel Lautschacher 11822449) 
        function brandMatching(app,im)
            %calls matching and stores brandimage and brandname
            [brandImage, brandname] = matching(im);
            %%updates brand text in textfield GUI
            app.BrandEditField.Value = brandname; 
            %%updates brand image in GUI
            updatebrand(app, brandImage);
        end
        
        %%optical flow (Vincent Zoechling 11913652 and Lucio Delen 11713066) 
        function carDetection_opticalFlow(app, video)
                %call carDetection_opticalFlow and store the output image
                %in carImage
                carImage = carDetection_opticalFlow(video);
                %call logoPosition to get the logo Position
                logoPosition(app, carImage);
            end
        end


    % Callbacks that handle component events
    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app)
             % Configure image axes
            app.ImageAxes.Visible = 'off';
            app.ImageAxes.Colormap = gray(256);
            axis(app.ImageAxes, 'image');
            
            % Update the image
            updateimage(app, 'suzuki.png');
        end

        % Button pushed function: LoadButton
        function LoadButtonPushed(app, event)
            % Display uigetfile dialog
            filterspec = {'*.png;'};
            f = uigetfile(filterspec);
            %v = Videoreader(f);
            %while hasFrame(v)
            %imshow(readFrame(v), 'Parent', app.ImageAxes);
            %end
        end

        % Value changed function: DropDown
        function DropDownValueChanged(app, event)
             % Update the image and histograms
            updateimage(app, app.DropDown.Value);
        end

        % Button pushed function: GetBrandButton
        function GetBrandButtonPushed(app, event)
            app.FinishedLamp.Color = [1.00,0.41,0.16];
            app.EditField.Value = 'Please wait....';
            videoname = imread(app.DropDown.Value);
            logoPosition(app,videoname);
            %carDetection_opticalFlow(app, videoname);
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Color = [0.9412 0.9412 0.9412];
            app.UIFigure.Position = [100 100 672 610];
            app.UIFigure.Name = 'MATLAB App';

            % Create LoadButton
            app.LoadButton = uibutton(app.UIFigure, 'push');
            app.LoadButton.ButtonPushedFcn = createCallbackFcn(app, @LoadButtonPushed, true);
            app.LoadButton.Position = [423 414 143 23];
            app.LoadButton.Text = 'Load Custom Video';

            % Create BrandEditFieldLabel
            app.BrandEditFieldLabel = uilabel(app.UIFigure);
            app.BrandEditFieldLabel.HorizontalAlignment = 'right';
            app.BrandEditFieldLabel.Position = [188 101 38 22];
            app.BrandEditFieldLabel.Text = 'Brand';

            % Create BrandEditField
            app.BrandEditField = uieditfield(app.UIFigure, 'text');
            app.BrandEditField.Position = [241 101 100 22];

            % Create PredefinedVideosDropDownLabel
            app.PredefinedVideosDropDownLabel = uilabel(app.UIFigure);
            app.PredefinedVideosDropDownLabel.HorizontalAlignment = 'right';
            app.PredefinedVideosDropDownLabel.Position = [391 462 103 22];
            app.PredefinedVideosDropDownLabel.Text = 'Predefined Videos';

            % Create DropDown
            app.DropDown = uidropdown(app.UIFigure);
            app.DropDown.Items = {'car one', 'car two', 'car three'};
            app.DropDown.ItemsData = {'suzuki.png', 'skoda.png', 'rangeRover.png'};
            app.DropDown.ValueChangedFcn = createCallbackFcn(app, @DropDownValueChanged, true);
            app.DropDown.Position = [509 458 89 29];
            app.DropDown.Value = 'suzuki.png';

            % Create GetBrandButton
            app.GetBrandButton = uibutton(app.UIFigure, 'push');
            app.GetBrandButton.ButtonPushedFcn = createCallbackFcn(app, @GetBrandButtonPushed, true);
            app.GetBrandButton.BackgroundColor = [1 1 1];
            app.GetBrandButton.Position = [273 226 127 45];
            app.GetBrandButton.Text = 'Get Brand';

            % Create FinishedLampLabel
            app.FinishedLampLabel = uilabel(app.UIFigure);
            app.FinishedLampLabel.HorizontalAlignment = 'right';
            app.FinishedLampLabel.Position = [424 237 51 22];
            app.FinishedLampLabel.Text = 'Finished';

            % Create FinishedLamp
            app.FinishedLamp = uilamp(app.UIFigure);
            app.FinishedLamp.Position = [490 237 20 20];
            app.FinishedLamp.Color = [0.3922 0.8314 0.0745];

            % Create EditField
            app.EditField = uieditfield(app.UIFigure, 'text');
            app.EditField.Position = [526 237 99 20];

            % Create BrandAxes
            app.BrandAxes = uiaxes(app.UIFigure);
            app.BrandAxes.XTick = [];
            app.BrandAxes.XTickLabel = '';
            app.BrandAxes.YTick = [];
            app.BrandAxes.FontSize = 1;
            app.BrandAxes.Position = [387 50 112 124];

            % Create ImageAxes
            app.ImageAxes = uiaxes(app.UIFigure);
            app.ImageAxes.XTick = [];
            app.ImageAxes.YTick = [];
            app.ImageAxes.FontSize = 1;
            app.ImageAxes.Position = [79 371 240 158];

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = brandDetector

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            % Execute the startup function
            runStartupFcn(app, @startupFcn)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end
